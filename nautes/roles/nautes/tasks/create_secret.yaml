- name: Create secret keys
  kubernetes.core.k8s:
    state: present
    namespace: "{{ nautes_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: global-ca 
      type: Opaque
      data:
        ca.crt: "{{ lookup('file', '{{ output_folder_pki }}/ca.crt') | b64encode }}"

- name: Create secret keys
  kubernetes.core.k8s:
    state: present
    namespace: "{{ nautes_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cluster-keypair
      type: Opaque
      data:
        client.crt: "{{ lookup('file', '{{ output_folder_pki }}/CLUSTER.crt') | b64encode }}"
        client.key: "{{ lookup('file', '{{ output_folder_pki }}/CLUSTER.key') | b64encode }}"

- name: Create secret keys
  kubernetes.core.k8s:
    state: present
    namespace: "{{ nautes_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: runtime-keypair
      type: Opaque
      data:
        client.crt: "{{ lookup('file', '{{ output_folder_pki }}/RUNTIME.crt') | b64encode }}"
        client.key: "{{ lookup('file', '{{ output_folder_pki }}/RUNTIME.key') | b64encode }}"

- name: Create secret keys
  kubernetes.core.k8s:
    state: present
    namespace: "{{ nautes_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: api-server-cert
      type: Opaque
      data:
        apiserver.crt: "{{ lookup('file', '{{ output_folder_pki }}/API.crt') | b64encode }}"
        apiserver.key: "{{ lookup('file', '{{ output_folder_pki }}/API.key') | b64encode }}"
        ca.crt:  "{{ lookup('file', '{{ output_folder_pki }}/ca.crt') | b64encode }}"

- name: Create secret keys
  kubernetes.core.k8s:
    state: present
    namespace: "{{ nautes_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: api-server-gitlab-ca
      type: Opaque
      data:
        ca.crt:  "{{ lookup('file', '{{ output_folder_pki }}/ca.crt') | b64encode }}"


